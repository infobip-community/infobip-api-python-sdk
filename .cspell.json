{
  "version": "0.2",
  "$schema": "https://raw.githubusercontent.com/streetsidesoftware/cspell/master/cspell.schema.json",
  "language": "en",
  "dictionaries": [
    "python",
    "en_US",
    "en-gb",
    "companies",
    "softwareTerms",
    "misc"
  ],
  "words": [
    "AUTORESPONSE",
    "AYΣTHPO",
    "AΘHNAIΩN",
    "AΠOΦAΣH",
    "BIREYSEL",
    "CLEARSKY",
    "EINAI",
    "EKKΛHΣIAΣ",
    "EMΠAPΓKO",
    "ENROUTE",
    "EΠIBAΛEI",
    "GIIN",
    "ICEX",
    "KAΘOΛIKO",
    "Kilic",
    "Lozina",
    "Luka",
    "MEΓAPIKO",
    "MMSADVANCEDMESSAGESEGMENT",
    "MMSWEBHOOKINBOUNDMESSAGESEGMENT",
    "PSTN",
    "SEHK",
    "SMIL",
    "SMPP",
    "SZSE",
    "Smil",
    "Smpp",
    "Snyk",
    "TACIR",
    "TENDLC",
    "TWSE",
    "USSD",
    "WABA",
    "aabe",
    "aenum",
    "conint",
    "conlist",
    "defaultplaceholders",
    "dtmf",
    "formdata",
    "httpx",
    "ibsso",
    "ijkl",
    "infobip",
    "intermediatereport",
    "klass",
    "motogstylus",
    "msisdn",
    "preserverecipients",
    "pstn",
    "pydantic",
    "replyto",
    "setuptools",
    "smil",
    "somexternal",
    "templateid",
    "testenv",
    "trackclicks",
    "trackopens",
    "webrtc",
    "Αθηναίων",
    "ΓNΩΣTH",
    "ΓYPΩ",
    "ΔHMOY",
    "Εκκλησίας",
    "Μεγαρικό",
    "ΠIΘANON",
    "ΨHΦIΣMA",
    "απόφαση",
    "αυστηρό",
    "γνωστή",
    "δήμου",
    "είναι",
    "εμπάργκο",
    "επιβάλει",
    "καθολικό",
    "ψήφισμα"
  ],
  "flagWords": [],
  "patterns": [
    {
      "name": "Markdown links",
      "pattern": "\\((.*)\\)",
      "description": ""
    },
    {
      "name": "Markdown code blocks",
      "pattern": "/^(\\s*`{3,}).*[\\s\\S]*?^\\1/gmx",
      "description": "Taken from the cSpell example at https://cspell.org/configuration/patterns/#verbose-regular-expressions"
    },
    {
      "name": "Inline code blocks",
      "pattern": "\\`([^\\`\\r\\n]+?)\\`",
      "description": "https://stackoverflow.com/questions/41274241/how-to-capture-inline-markdown-code-but-not-a-markdown-code-fence-with-regex"
    },
    {
      "name": "Link contents",
      "pattern": "\\<a(.*)\\>",
      "description": ""
    },
    {
      "name": "Snippet references",
      "pattern": "-- snippet:(.*)",
      "description": ""
    },
    {
      "name": "Snippet references 2",
      "pattern": "\\<\\[sample:(.*)",
      "description": "another kind of snippet reference"
    },
    {
      "name": "Multi-line code blocks",
      "pattern": "/^\\s*```[\\s\\S]*?^\\s*```/gm"
    },
    {
      "name": "HTML Tags",
      "pattern": "<[^>]*>",
      "description": "Reference: https://stackoverflow.com/questions/11229831/regular-expression-to-remove-html-tags-from-a-string"
    }
  ],
  "ignoreRegExpList": [
    "Markdown links",
    "Markdown code blocks",
    "Inline code blocks",
    "Link contents",
    "Snippet references",
    "Snippet references 2",
    "Multi-line code blocks",
    "HTML Tags"
  ],
  "ignorePaths": [
    ".cspell.json",
    "package.json",
    "package-lock.json",
    "yarn.lock",
    "tsconfig.json",
    "node_modules/**",
    ".eslintrc.js",
    ".vscode/settings.json",
    ".gitignore",
    ".github/workflows"
  ]
}
